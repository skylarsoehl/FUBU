{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ReactComponent as FUBULogoSmall } from \"../../\";\nimport Grid from \"@material-ui/core/Grid\";\nimport theme from \"../theme\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    paddingTop: theme.spacing(14),\n    paddingBottom: theme.spacing(6),\n    textAlign: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\"\n  },\n  bigButtons: {\n    width: \"420px\",\n    height: \"77px\",\n    fontWeight: 400,\n    marginTop: \"15px\",\n    marginBottom: \"25px\",\n    fontSize: \"33px\",\n    borderRadius: \"8px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\",\n    borderColor: \"#FFB9AE\",\n    \"&:hover\": {\n      backgroundColor: \"#FFB9AE\"\n    }\n  },\n  miniButtons: {\n    width: \"143px\",\n    height: \"46px\",\n    marginTop: \"60px\",\n    marginBottom: \"25px\",\n    marginLeft: \"25px\",\n    marginRight: \"25px\",\n    fontSize: \"24px\",\n    borderRadius: \"8px\"\n  },\n  text: {\n    marginTop: \"10px\",\n    marginBottom: \"50px\",\n    textAlign: \"center\"\n  },\n  button: {\n    width: '246px',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginTop: '15px',\n    marginBottom: '25px',\n    fontSize: '24px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)'\n  },\n  input: {\n    marginBottom: '22px',\n    width: '500px'\n  },\n  form: {\n    width: \"552px\",\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: 'center',\n    alignItems: \"center\"\n  }\n}));\n\nfunction JoinWorkSpace() {\n  _s();\n\n  const classes = useStyles();\n  let history = useHistory();\n  const [userData, setUserData] = React.useState({});\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FUBULogoSmall, {\n            className: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            passwordConfirm: '',\n            pronouns: ''\n          },\n          validate: values => {\n            const errors = {};\n\n            if (!values.firstName) {\n              errors.firstName = 'Required';\n            }\n\n            if (!values.lastName) {\n              errors.lastName = 'Required';\n            }\n\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n              errors.email = 'Invalid email address';\n            }\n\n            if (!values.password) {\n              errors.password = 'Required';\n            } else if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i.test(values.password)) {\n              errors.password = 'Password must have a minimum of eight characters, at least one letter, one number and one special character (*, !, &, etc)';\n            }\n\n            if (!values.passwordConfirm) {\n              errors.passwordConfirm = 'You must confirm your password';\n            } else if (values.passwordConfirm !== values.password) {\n              errors.passwordConfirm = 'Your passwords do not match';\n            }\n\n            if (!values.pronouns) {\n              errors.pronouns = 'Required';\n            }\n\n            return errors;\n          },\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            setUserData(values);\n            setTimeout(() => {\n              setSubmitting(false);\n              history.push('/workspace', userData);\n            }, 500);\n          },\n          children: ({\n            submitForm,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            className: classes.form,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"firstName\",\n                type: \"text\",\n                label: \"First name\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"lastName\",\n                type: \"text\",\n                label: \"Last name\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"email\",\n                type: \"email\",\n                label: \"Email\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                type: \"password\",\n                label: \"Password\",\n                name: \"password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"passwordConfirm\",\n                type: \"password\",\n                label: \"Confirm Password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"pronouns\",\n                type: \"text\",\n                label: \"Pronouns\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.button,\n                size: \"large\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: isSubmitting,\n                onClick: submitForm,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.text,\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.miniButtons,\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: () => history.goBack(),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.miniButtons,\n            variant: \"contained\",\n            disabled: \"disabled\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JoinWorkSpace, \"f0q/6Q3EJ+bCMsSbvvsq5onRxa0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = JoinWorkSpace;\nexport default JoinWorkSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinWorkSpace\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js"],"names":["React","makeStyles","ThemeProvider","ReactComponent","FUBULogoSmall","Grid","theme","Typography","Button","useHistory","withStyles","TextField","Formik","Form","Field","Box","useStyles","root","display","justifyContent","logo","paddingTop","spacing","paddingBottom","textAlign","marginLeft","marginRight","bigButtons","width","height","fontWeight","marginTop","marginBottom","fontSize","borderRadius","borderColor","backgroundColor","miniButtons","text","button","boxShadow","input","form","flexDirection","alignItems","JoinWorkSpace","classes","history","userData","setUserData","useState","firstName","lastName","email","password","passwordConfirm","pronouns","values","errors","test","setSubmitting","setTimeout","push","submitForm","isSubmitting","goBack"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { ReactComponent as FUBULogoSmall } from \"../../\";\nimport Grid from \"@material-ui/core/Grid\";\nimport theme from \"../theme\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router\"\nimport { withStyles } from '@material-ui/core/styles';\nimport {TextField} from 'formik-material-ui';\nimport {Formik, Form, Field} from 'formik';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    paddingTop: theme.spacing(14),\n    paddingBottom: theme.spacing(6),\n    textAlign: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\",\n  },\n  bigButtons: {\n    width: \"420px\",\n    height: \"77px\",\n    fontWeight: 400,\n    marginTop: \"15px\",\n    marginBottom: \"25px\",\n    fontSize: \"33px\",\n    borderRadius: \"8px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\",\n    borderColor: \"#FFB9AE\",\n    \"&:hover\": {\n      backgroundColor: \"#FFB9AE\",\n    },\n  },\n  miniButtons: {\n    width: \"143px\",\n    height: \"46px\",\n    marginTop: \"60px\",\n    marginBottom: \"25px\",\n    marginLeft: \"25px\",\n    marginRight: \"25px\",\n    fontSize: \"24px\",\n    borderRadius: \"8px\",\n  },\n  text: {\n    marginTop: \"10px\",\n    marginBottom: \"50px\",\n    textAlign: \"center\",\n  },\n  button: {\n    width: '246px',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginTop: '15px',\n    marginBottom: '25px',\n    fontSize: '24px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n},\ninput: {\n    marginBottom: '22px',\n    width: '500px',\n},\nform: {\n    width: \"552px\",\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: 'center',\n    alignItems: \"center\",\n}\n}));\n\nfunction JoinWorkSpace() {\n  const classes = useStyles();\n\n  let history = useHistory();\n\n    const [userData, setUserData] = React.useState({});\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container className={classes.root}>\n        <Grid item xs={6}>\n          <Grid item xs={12}>\n            <FUBULogoSmall className={classes.logo}></FUBULogoSmall>\n          </Grid>\n          <Formik\n                        initialValues={{\n                            firstName: '',\n                            lastName: '',\n                            email: '',\n                            password: '',\n                            passwordConfirm: '',\n                            pronouns: '',\n                          }}\n                          validate={(values) => {\n                            const errors = {};\n\n                            if(!values.firstName) {\n                                errors.firstName = 'Required';\n                            } \n                            \n                            if(!values.lastName) {\n                                errors.lastName = 'Required';\n                            }                           \n\n                            if (!values.email) {\n                              errors.email = 'Required';\n                            } else if (\n                              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n                            ) {\n                              errors.email = 'Invalid email address';\n                            } \n\n                            if(!values.password) {\n                                errors.password = 'Required';\n                            } else if (\n                                !/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i.test(values.password)\n                            ) {\n                                errors.password = 'Password must have a minimum of eight characters, at least one letter, one number and one special character (*, !, &, etc)'\n                            }\n\n                            if(!values.passwordConfirm) {\n                                errors.passwordConfirm = 'You must confirm your password'\n                            } else if (values.passwordConfirm !== values.password) {\n                                errors.passwordConfirm = 'Your passwords do not match'\n                            }\n\n                            if(!values.pronouns) {\n                                errors.pronouns = 'Required';\n                            } \n\n                            return errors;\n                          }}\n                          onSubmit={(values, {setSubmitting}) => {\n                              setUserData(values)\n                            setTimeout(() => {\n                              setSubmitting(false);\n                              history.push('/workspace', userData);\n                            }, 500);\n                          }}\n                    >\n                        {({submitForm, isSubmitting}) => (\n                            <Form className={classes.form}>\n                                 <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"firstName\"\n                                    type=\"text\"\n                                    label=\"First name\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"lastName\"\n                                    type=\"text\"\n                                    label=\"Last name\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                 <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    variant=\"outlined\" \n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"passwordConfirm\"\n                                    type=\"password\"\n                                    label=\"Confirm Password\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"pronouns\"\n                                    type=\"text\"\n                                    label=\"Pronouns\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Button\n                                    className={classes.button}\n                                    size=\"large\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    onClick={submitForm}\n                                    >\n                                        Next\n                                    </Button>\n                                </Box>\n                            </Form>\n                        )}\n                    </Formik>\n          <Grid className={classes.text} item xs={12}>\n            <Button\n              className={classes.miniButtons}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </Button>\n            <Button\n              className={classes.miniButtons}\n              variant=\"contained\"\n              disabled={\"disabled\"}\n              color=\"primary\"\n            >\n              Next\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default JoinWorkSpace;\n"]},"metadata":{},"sourceType":"module"}