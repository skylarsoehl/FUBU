{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport { Formik, Form, Field } from 'formik';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '246px',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginTop: '15px',\n    marginBottom: '25px',\n    fontSize: '24px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)'\n  },\n  input: {\n    marginBottom: '22px',\n    width: '327px'\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(5)\n  },\n  title: {\n    fontWeight: 600,\n    textAlign: 'center',\n    paddingTop: '50px'\n  },\n  body: {\n    fontSize: '16px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: '#251F1C'\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.title,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    padding: '30px',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n}))(MuiDialogContent);\nexport default function LoginDialog() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false); //const [isFormComplete, setComplete] = React.useState(false)\n  // const checkComplete = (values) => {\n  //     if(values.firstName.length > 0 && values.lastName.length > 0 && values.email.length > 0 && values.password.length > 0 && values.passwordConfirm.length > 0 && values.pronouns.length > 0) {\n  //         setComplete(true)\n  //     }\n  //   };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleClickOpen,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        justifyContent: \"center\",\n        onClose: handleClose,\n        open: open,\n        children: !isSubmittonCompleted && /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginDialog, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginDialog\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js"],"names":["React","Button","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","TextField","withStyles","makeStyles","ThemeProvider","theme","Formik","Form","Field","Box","useStyles","button","width","paddingTop","spacing","paddingBottom","marginTop","marginBottom","fontSize","borderRadius","boxShadow","input","styles","root","margin","padding","title","fontWeight","textAlign","body","closeButton","position","right","top","color","DialogTitle","props","children","classes","onClose","other","DialogContent","display","flexWrap","justifyContent","LoginDialog","open","setOpen","useState","handleClickOpen","handleClose","isSubmittonCompleted"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport {Formik, Form, Field} from 'formik';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '246px',\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(0),\n        marginTop: '15px',\n        marginBottom: '25px',\n        fontSize: '24px',\n        borderRadius: '8px',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n    },\n    input: {\n        marginBottom: '22px',\n        width: '327px',\n    }\n}));\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(5),\n    },\n    title: {\n        fontWeight: 600,\n        textAlign: 'center',\n        paddingTop: '50px',\n    },\n    body: {\n        fontSize: '16px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: '#251F1C',\n    },\n});\n\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.title} {...other}>\n            <Typography variant=\"h1\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        padding: '30px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    }\n}))(MuiDialogContent);\n\nexport default function LoginDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    //const [isFormComplete, setComplete] = React.useState(false)\n\n    // const checkComplete = (values) => {\n    //     if(values.firstName.length > 0 && values.lastName.length > 0 && values.email.length > 0 && values.password.length > 0 && values.passwordConfirm.length > 0 && values.pronouns.length > 0) {\n    //         setComplete(true)\n    //     }\n    //   };\n    \n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n\n        <ThemeProvider theme={theme}>\n           <React.Fragment>\n                <Button\n                className={classes.button}\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n                 >\n                    Sign Up\n                </Button>\n                <Dialog\n                justifyContent=\"center\" \n                onClose={handleClose} \n                open={open}>\n                    {!isSubmittonCompleted && (\n                        <React.Fragment>\n\n                        </React.Fragment>\n                    )}\n                </Dialog>\n           </React.Fragment>\n        </ThemeProvider>\n    );\n}"]},"metadata":{},"sourceType":"module"}