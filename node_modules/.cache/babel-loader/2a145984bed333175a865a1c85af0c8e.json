{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/admin/choose-fridge-name.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ReactComponent as FUBULogoSmall } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/fubu_logo_small.svg\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport theme from \"../../theme\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"formik-material-ui\";\nimport { Formik, Form, Field } from \"formik\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    paddingTop: theme.spacing(4),\n    textAlign: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\"\n  },\n  input: {\n    marginTop: \"50px\",\n    marginBottom: \"40px\",\n    width: \"500px\"\n  },\n  miniButtons: {\n    width: \"143px\",\n    height: \"46px\",\n    marginBottom: \"25px\",\n    marginLeft: \"50px\",\n    marginRight: \"50px\",\n    fontSize: \"24px\",\n    borderRadius: \"8px\"\n  },\n  text: {\n    marginTop: \"50px\",\n    marginBottom: \"25px\",\n    textAlign: \"center\"\n  },\n  buttonText: {\n    marginTop: \"40px\",\n    marginBottom: \"25px\",\n    textAlign: \"center\"\n  }\n}));\n\nfunction ChooseFridgeName() {\n  _s();\n\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(false);\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(FUBULogoSmall, {\n      className: classes.logo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.text,\n      variant: \"h1\",\n      children: [\" \", \"What's the name of your \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this), \"community fridge?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          fridgeName: \"\"\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.fridgeName) {\n            errors.fridgeName = \"Required\";\n          } else {\n            setCompleted(true);\n          }\n\n          return errors;\n        },\n        onSubmit: (values, {\n          setSubmitting\n        }) => {\n          setTimeout(() => {\n            setSubmitting(false);\n            history.push(\"/join-or-create\");\n          }, 500);\n        },\n        children: ({\n          submitForm,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              className: classes.input,\n              component: TextField,\n              name: \"fridgeName\",\n              type: \"text\",\n              label: \"Fridge Name\",\n              variant: \"outlined\",\n              onClick: values ? setCompleted(true) : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.text,\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: classes.miniButtons,\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => history.goBack(),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.miniButtons,\n              size: \"large\",\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: isSubmitting,\n              onClick: submitForm,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChooseFridgeName, \"rJcM4S6R7ouFSvTv71w5ar3+mGU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ChooseFridgeName;\nexport default ChooseFridgeName;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseFridgeName\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/admin/choose-fridge-name.js"],"names":["React","makeStyles","ThemeProvider","Grid","theme","Typography","Button","TextField","Formik","Form","Field","Box","useHistory","useStyles","root","display","flexWrap","justifyContent","logo","paddingTop","spacing","textAlign","marginLeft","marginRight","input","marginTop","marginBottom","width","miniButtons","height","fontSize","borderRadius","text","buttonText","ChooseFridgeName","classes","completed","setCompleted","useState","history","fridgeName","values","errors","setSubmitting","setTimeout","push","submitForm","isSubmitting","form","goBack"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ReactComponent as FUBULogoSmall } from \"../../assets/fubu_logo_small.svg\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport theme from \"../../theme\";\nimport { Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"formik-material-ui\";\nimport { Formik, Form, Field } from \"formik\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    paddingTop: theme.spacing(4),\n    textAlign: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"block\",\n  },\n  input: {\n    marginTop: \"50px\",\n    marginBottom: \"40px\",\n    width: \"500px\",\n  },\n  miniButtons: {\n    width: \"143px\",\n    height: \"46px\",\n    marginBottom: \"25px\",\n    marginLeft: \"50px\",\n    marginRight: \"50px\",\n    fontSize: \"24px\",\n    borderRadius: \"8px\",\n  },\n  text: {\n    marginTop: \"50px\",\n    marginBottom: \"25px\",\n    textAlign: \"center\",\n  },\n  buttonText: {\n    marginTop: \"40px\",\n    marginBottom: \"25px\",\n    textAlign: \"center\",\n  },\n}));\n\nfunction ChooseFridgeName() {\n  const classes = useStyles();\n\n  const [completed, setCompleted] = React.useState(false);\n\n  const history = useHistory();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <FUBULogoSmall className={classes.logo}></FUBULogoSmall>\n      <Typography className={classes.text} variant=\"h1\">\n        {\" \"}\n        What's the name of your <br></br>community fridge?\n      </Typography>\n      <Grid container className={classes.root}>\n        <Formik\n          initialValues={{\n            fridgeName: \"\",\n          }}\n          validate={(values) => {\n            const errors = {};\n\n            if (!values.fridgeName) {\n              errors.fridgeName = \"Required\";\n            } else {\n                setCompleted(true)\n            }\n\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              setSubmitting(false);\n              history.push(\"/join-or-create\");\n            }, 500);\n          }}\n        >\n          {({ submitForm, isSubmitting }) => (\n            <Form className={classes.form}>\n              <Box margin={1}>\n                <Field\n                  className={classes.input}\n                  component={TextField}\n                  name=\"fridgeName\"\n                  type=\"text\"\n                  label=\"Fridge Name\"\n                  variant=\"outlined\"\n                  onClick={values? setCompleted(true) : false}\n                />\n              </Box>\n              <Grid className={classes.text} item xs={12}>\n                <Button\n                  className={classes.miniButtons}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => history.goBack()}\n                >\n                  Back\n                </Button>\n                <Button\n                  className={classes.miniButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  onClick={submitForm}\n                >\n                  Next\n                </Button>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default ChooseFridgeName;\n"]},"metadata":{},"sourceType":"module"}