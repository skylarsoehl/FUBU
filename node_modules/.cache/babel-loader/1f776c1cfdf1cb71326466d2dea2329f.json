{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/core/components/core-search-bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Container } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\n\nconst CoreSearchBar = props => {\n  _s();\n\n  const classes = useStyles();\n  const [display, setDisplay] = useState(false);\n  const [data, setData] = useState(props.searchData);\n  const [search, setSearch] = useState(\"\");\n\n  const updateSearchResult = res => {\n    setSearch(res);\n    setDisplay(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      variant: \"outlined\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        className: classes.input,\n        placeholder: \"Search\",\n        inputProps: {\n          \"aria-label\": \"search\"\n        },\n        searchData: props.searchData,\n        value: search,\n        onClick: () => setDisplay(display),\n        onChange: updateSearchResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        type: \"submit\",\n        className: classes.iconButton,\n        \"aria-label\": \"search\",\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), display && /*#__PURE__*/_jsxDEV(Paper, {\n      children: data.filter(item => value.indexOf(search.toLowerCase()) > -1).map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => updateSearchResult(value.name),\n          className: \"option\",\n          tabIndex: \"0\",\n          children: value\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CoreSearchBar, \"kJqVFRV9RMl1kewtVJkokC7VPUg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CoreSearchBar;\nexport default CoreSearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoreSearchBar\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/core/components/core-search-bar.js"],"names":["React","useEffect","useState","useRef","makeStyles","createStyles","Paper","InputBase","IconButton","SearchIcon","Container","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","CoreSearchBar","props","classes","setDisplay","data","setData","searchData","search","setSearch","updateSearchResult","res","filter","item","value","indexOf","toLowerCase","map","name","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: \"2px 4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n  })\n);\n\nconst CoreSearchBar = (props) => {\n  const classes = useStyles();\n\n  const [display, setDisplay] = useState(false);\n  const [data, setData] = useState(props.searchData);\n  const [search, setSearch] = useState(\"\");\n\n  const updateSearchResult = (res) => {\n    setSearch(res);\n    setDisplay(false);\n  };\n\n  return (\n      <Container>\n          <Paper component=\"form\" variant=\"outlined\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search\"\n        inputProps={{ \"aria-label\": \"search\" }}\n        searchData={props.searchData}\n        value={search}\n        onClick={() => setDisplay(display)}\n        onChange={updateSearchResult}\n      />\n      <IconButton\n        type=\"submit\"\n        className={classes.iconButton}\n        aria-label=\"search\"\n        color=\"primary\"\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n    {display && (\n        <Paper>\n          {data\n            .filter((item) => value.indexOf(search.toLowerCase()) > -1)\n            .map((item) => {\n              return (\n                <div\n                  onClick={() => updateSearchResult(value.name)}\n                  className=\"option\"\n                  key={i}\n                  tabIndex=\"0\"\n                >\n                  {value}\n                </div>\n              );\n            })}\n        </Paper>\n      )}\n      </Container>\n  );\n};\n\nexport default CoreSearchBar;\n"]},"metadata":{},"sourceType":"module"}