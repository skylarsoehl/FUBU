{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport { Formik, Form, Field } from 'formik';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '246px',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginTop: '15px',\n    marginBottom: '25px',\n    fontSize: '24px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)'\n  },\n  input: {\n    marginBottom: '22px',\n    width: '327px'\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(5)\n  },\n  title: {\n    fontWeight: 600,\n    textAlign: 'center',\n    paddingTop: '50px'\n  },\n  body: {\n    fontSize: '16px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: '#251F1C'\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.title,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    padding: '30px',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n}))(MuiDialogContent);\nexport default function LoginDialog() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false); //const [isFormComplete, setComplete] = React.useState(false)\n  // const checkComplete = (values) => {\n  //     if(values.firstName.length > 0 && values.lastName.length > 0 && values.email.length > 0 && values.password.length > 0 && values.passwordConfirm.length > 0 && values.pronouns.length > 0) {\n  //         setComplete(true)\n  //     }\n  //   };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      justifyContent: \"center\",\n      onClose: handleClose,\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: handleClose,\n        children: \"Create your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            select: '0-20',\n            tags: [],\n            rememberMe: true,\n            date: new Date(),\n            time: new Date(),\n            dateTime: new Date(),\n            toggle: [],\n            autocomplete: [],\n            freeSoloMultiple: []\n          },\n          validate: values => {\n            const errors = {};\n\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n              errors.email = 'Invalid email address';\n            }\n\n            return errors;\n          },\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            setTimeout(() => {\n              setSubmitting(false);\n              alert(JSON.stringify(values, null, 2));\n            }, 500);\n          },\n          children: ({\n            submitForm,\n            isSubmitting,\n            touched,\n            errors\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: UpperCasingTextField,\n                name: \"email\",\n                type: \"email\",\n                label: \"Email\",\n                helperText: \"Please Enter Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: TextField,\n                type: \"password\",\n                label: \"Password\",\n                name: \"password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Field, {\n                  component: Switch,\n                  type: \"checkbox\",\n                  name: \"rememberMe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 39\n                }, this),\n                label: \"Remember Me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: TextField,\n                type: \"text\",\n                name: \"select\",\n                label: \"With Select\",\n                select: true,\n                variant: \"standard\",\n                helperText: \"Please select Range\",\n                margin: \"normal\",\n                InputLabelProps: {\n                  shrink: true\n                },\n                children: ranges.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 39\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  shrink: true,\n                  htmlFor: \"tags\",\n                  children: \"Tags\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  component: Select,\n                  type: \"text\",\n                  name: \"tags\",\n                  multiple: true,\n                  inputProps: {\n                    name: 'tags',\n                    id: 'tags'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"dogs\",\n                    children: \"Dogs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"cats\",\n                    children: \"Cats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"rats\",\n                    children: \"Rats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"snakes\",\n                    children: \"Snakes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 39\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), isSubmitting && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: TimePicker,\n                name: \"time\",\n                label: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: DatePicker,\n                name: \"date\",\n                label: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                component: DateTimePicker,\n                name: \"dateTime\",\n                label: \"Date Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Toggle button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                component: ToggleButtonGroup,\n                name: \"toggle\",\n                type: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"left\",\n                  \"aria-label\": \"left aligned\",\n                  children: /*#__PURE__*/_jsxDEV(FormatAlignLeftIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"center\",\n                  \"aria-label\": \"centered\",\n                  children: /*#__PURE__*/_jsxDEV(FormatAlignCenterIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"right\",\n                  \"aria-label\": \"right aligned\",\n                  children: /*#__PURE__*/_jsxDEV(FormatAlignRightIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                  value: \"justify\",\n                  \"aria-label\": \"justified\",\n                  disabled: true,\n                  children: /*#__PURE__*/_jsxDEV(FormatAlignJustifyIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                name: \"autocomplete\",\n                multiple: true,\n                component: Autocomplete,\n                options: top100Films,\n                getOptionLabel: option => option.title,\n                style: {\n                  width: 300\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(MuiTextField, { ...params,\n                  error: touched['autocomplete'] && !!errors['autocomplete'],\n                  helperText: touched['autocomplete'] && errors['autocomplete'],\n                  label: \"Autocomplete\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: isSubmitting,\n                onClick: submitForm,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginDialog, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginDialog\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js"],"names":["React","Button","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","TextField","withStyles","makeStyles","ThemeProvider","theme","Formik","Form","Field","Box","useStyles","button","width","paddingTop","spacing","paddingBottom","marginTop","marginBottom","fontSize","borderRadius","boxShadow","input","styles","root","margin","padding","title","fontWeight","textAlign","body","closeButton","position","right","top","color","DialogTitle","props","children","classes","onClose","other","DialogContent","display","flexWrap","justifyContent","LoginDialog","open","setOpen","useState","handleClickOpen","handleClose","email","password","select","tags","rememberMe","date","Date","time","dateTime","toggle","autocomplete","freeSoloMultiple","values","errors","test","setSubmitting","setTimeout","alert","JSON","stringify","submitForm","isSubmitting","touched","UpperCasingTextField","Switch","shrink","ranges","map","option","value","label","Select","name","id","TimePicker","DatePicker","DateTimePicker","ToggleButtonGroup","Autocomplete","top100Films","params"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport {Formik, Form, Field} from 'formik';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '246px',\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(0),\n        marginTop: '15px',\n        marginBottom: '25px',\n        fontSize: '24px',\n        borderRadius: '8px',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n    },\n    input: {\n        marginBottom: '22px',\n        width: '327px',\n    }\n}));\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(5),\n    },\n    title: {\n        fontWeight: 600,\n        textAlign: 'center',\n        paddingTop: '50px',\n    },\n    body: {\n        fontSize: '16px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: '#251F1C',\n    },\n});\n\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.title} {...other}>\n            <Typography variant=\"h1\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        padding: '30px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    }\n}))(MuiDialogContent);\n\nexport default function LoginDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    //const [isFormComplete, setComplete] = React.useState(false)\n\n    // const checkComplete = (values) => {\n    //     if(values.firstName.length > 0 && values.lastName.length > 0 && values.email.length > 0 && values.password.length > 0 && values.passwordConfirm.length > 0 && values.pronouns.length > 0) {\n    //         setComplete(true)\n    //     }\n    //   };\n    \n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n\n        <ThemeProvider theme={theme}>\n            <Button className={classes.button} size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Sign Up</Button>\n            <Dialog justifyContent=\"center\" onClose={handleClose} open={open}>\n                <DialogTitle onClose={handleClose}>\n                    Create your account\n        </DialogTitle>\n                <DialogContent>\n                    <Formik\n                        initialValues={{\n                            email: '',\n                            password: '',\n                            select: '0-20',\n                            tags: [],\n                            rememberMe: true,\n                            date: new Date(),\n                            time: new Date(),\n                            dateTime: new Date(),\n                            toggle: [],\n                            autocomplete: [],\n                            freeSoloMultiple: [],\n                          }}\n                          validate={(values) => {\n                            const errors: Partial<Values> = {};\n                            if (!values.email) {\n                              errors.email = 'Required';\n                            } else if (\n                              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n                            ) {\n                              errors.email = 'Invalid email address';\n                            }\n                            return errors;\n                          }}\n                          onSubmit={(values, {setSubmitting}) => {\n                            setTimeout(() => {\n                              setSubmitting(false);\n                              alert(JSON.stringify(values, null, 2));\n                            }, 500);\n                          }}\n                        >\n                          {({submitForm, isSubmitting, touched, errors}) => (\n                              <Form>\n                                <Box margin={1}>\n                                  <Field\n                                    component={UpperCasingTextField}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    helperText=\"Please Enter Email\"\n                                  />\n                                </Box>\n                                <Box margin={1}>\n                                  <Field\n                                    component={TextField}\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    variant=\"outlined\" \n                                  />\n                                </Box>\n                                <Box margin={1}>\n                                  <FormControlLabel\n                                    control={\n                                      <Field component={Switch} type=\"checkbox\" name=\"rememberMe\" />\n                                    }\n                                    label=\"Remember Me\"\n                                  />\n                                </Box>\n                                <Box margin={1}>\n                                  <Field\n                                    component={TextField}\n                                    type=\"text\"\n                                    name=\"select\"\n                                    label=\"With Select\"\n                                    select\n                                    variant=\"standard\"\n                                    helperText=\"Please select Range\"\n                                    margin=\"normal\"\n                                    InputLabelProps={{\n                                      shrink: true,\n                                    }}\n                                  >\n                                    {ranges.map((option) => (\n                                      <MenuItem key={option.value} value={option.value}>\n                                        {option.label}\n                                      </MenuItem>\n                                    ))}\n                                  </Field>\n                                </Box>\n                                <Box margin={1}>\n                                  <FormControl>\n                                    <InputLabel shrink={true} htmlFor=\"tags\">\n                                      Tags\n                                    </InputLabel>\n                                    <Field\n                                      component={Select}\n                                      type=\"text\"\n                                      name=\"tags\"\n                                      multiple={true}\n                                      inputProps={{name: 'tags', id: 'tags'}}\n                                    >\n                                      <MenuItem value=\"dogs\">Dogs</MenuItem>\n                                      <MenuItem value=\"cats\">Cats</MenuItem>\n                                      <MenuItem value=\"rats\">Rats</MenuItem>\n                                      <MenuItem value=\"snakes\">Snakes</MenuItem>\n                                    </Field>\n                                  </FormControl>\n                                </Box>\n                                {isSubmitting && <LinearProgress />}\n                                <Box margin={1}>\n                                  <Field component={TimePicker} name=\"time\" label=\"Time\" />\n                                </Box>\n                                <Box margin={1}>\n                                  <Field component={DatePicker} name=\"date\" label=\"Date\" />\n                                </Box>\n                                <Box margin={1}>\n                                  <Field\n                                    component={DateTimePicker}\n                                    name=\"dateTime\"\n                                    label=\"Date Time\"\n                                  />\n                                </Box>\n                                <Box margin={1}>\n                                  <Typography>Toggle button</Typography>\n                                  <Field component={ToggleButtonGroup} name=\"toggle\" type=\"checkbox\">\n                                    <ToggleButton value=\"left\" aria-label=\"left aligned\">\n                                      <FormatAlignLeftIcon />\n                                    </ToggleButton>\n                                    <ToggleButton value=\"center\" aria-label=\"centered\">\n                                      <FormatAlignCenterIcon />\n                                    </ToggleButton>\n                                    <ToggleButton value=\"right\" aria-label=\"right aligned\">\n                                      <FormatAlignRightIcon />\n                                    </ToggleButton>\n                                    <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\n                                      <FormatAlignJustifyIcon />\n                                    </ToggleButton>\n                                  </Field>\n                                </Box>\n                                <Box margin={1}>\n                                  <Field\n                                    name=\"autocomplete\"\n                                    multiple\n                                    component={Autocomplete}\n                                    options={top100Films}\n                                    getOptionLabel={(option: any) => option.title}\n                                    style={{width: 300}}\n                                    renderInput={(params: AutocompleteRenderInputParams) => (\n                                      <MuiTextField\n                                        {...params}\n                                        error={touched['autocomplete'] && !!errors['autocomplete']}\n                                        helperText={touched['autocomplete'] && errors['autocomplete']}\n                                        label=\"Autocomplete\"\n                                        variant=\"outlined\"\n                                      />\n                                    )}\n                                  />\n                                </Box>\n                                <Box margin={1}>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    onClick={submitForm}\n                                  >\n                                    Submit\n                                  </Button>\n                                </Box>\n                              </Form>\n                          )}\n                    </Formik>\n                </DialogContent>\n            </Dialog>\n        </ThemeProvider>\n    );\n}"]},"metadata":{},"sourceType":"module"}