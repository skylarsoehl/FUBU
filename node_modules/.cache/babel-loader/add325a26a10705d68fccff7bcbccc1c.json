{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/core/components/core-tool-tip.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HtmlTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\"\n  }\n}))(Tooltip);\nconst useStyles = makeStyles(theme => ({\n  button: {\n    borderRadius: \"50em\"\n  }\n}));\n\nconst CoreToolTip = () => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(HtmlTooltip, {\n    title: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        children: \"Tooltip with HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"And here's\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"some\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"amazing content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 51\n      }, this), \".\", \" \", \"It's very engaging. Right?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(IconButton, { ...bindTrigger(popupState),\n      children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n        color: \"primary\",\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes,\n      children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoreToolTip, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CoreToolTip;\nexport default CoreToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoreToolTip\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/core/components/core-tool-tip.js"],"names":["React","Tooltip","withStyles","Typography","InfoIcon","makeStyles","Button","HtmlTooltip","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","useStyles","button","borderRadius","CoreToolTip","classes","bindTrigger","popupState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,WAAW,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACzCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,SADV;AAEPC,IAAAA,KAAK,EAAE,qBAFA;AAGPC,IAAAA,QAAQ,EAAE,GAHH;AAIPC,IAAAA,QAAQ,EAAEL,KAAK,CAACM,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CAJH;AAKPC,IAAAA,MAAM,EAAE;AALD;AADgC,CAAZ,CAAD,CAAV,CAQhBf,OARgB,CAApB;AAUA,MAAMgB,SAAS,GAAGZ,UAAU,CAAEG,KAAD,KAAY;AACvCU,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE;AADR;AAD+B,CAAZ,CAAD,CAA5B;;AAMA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AAEA,sBACE,QAAC,WAAD;AACE,IAAA,KAAK,eACH,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,oBAE0B;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cAF1B,oBAE0C;AAAA,kBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,cAF1C,OAEsE,GAFtE,EAGG,4BAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,4BASI,QAAC,UAAD,OAAgBK,WAAW,CAACC,UAAD,CAA3B;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,eAYE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEF,OAAnB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArBD;;GAAMD,W;UACYH,S;;;KADZG,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    borderRadius: \"50em\",\n  },\n}));\n\nconst CoreToolTip = () => {\n  const classes = useStyles();\n\n  return (\n    <HtmlTooltip\n      title={\n        <React.Fragment>\n          <Typography color=\"inherit\">Tooltip with HTML</Typography>\n          <em>{\"And here's\"}</em> <b>{\"some\"}</b> <u>{\"amazing content\"}</u>.{\" \"}\n          {\"It's very engaging. Right?\"}\n        </React.Fragment>\n      }\n    >\n        <IconButton {...bindTrigger(popupState)}>\n            <InfoIcon color=\"primary\" fontSize=\"large\" />\n          </IconButton>\n      <Button className={classes}>\n        <InfoIcon />\n      </Button>\n    </HtmlTooltip>\n  );\n};\n\nexport default CoreToolTip;\n"]},"metadata":{},"sourceType":"module"}