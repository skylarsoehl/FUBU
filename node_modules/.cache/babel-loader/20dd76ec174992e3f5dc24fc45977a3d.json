{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport { TextField } from 'formik-material-ui';\nimport { Formik, Form, Field } from 'formik';\nimport Box from '@material-ui/core/Box';\nimport { Redirect } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '246px',\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    marginTop: '15px',\n    marginBottom: '25px',\n    fontSize: '24px',\n    borderRadius: '8px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)'\n  },\n  input: {\n    marginBottom: '22px',\n    width: '500px'\n  },\n  form: {\n    width: \"552px\",\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: 'center',\n    alignItems: \"center\"\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(5)\n  },\n  title: {\n    fontWeight: 600,\n    textAlign: 'center',\n    paddingTop: '50px'\n  },\n  body: {\n    fontSize: '16px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: '#251F1C'\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.title,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(2),\n    padding: '30px'\n  }\n}))(MuiDialogContent);\nexport default function SignupDialog() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [userData, setUserData] = React.useState({});\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button,\n      size: \"large\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      justifyContent: \"center\",\n      onClose: handleClose,\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        onClose: handleClose,\n        children: \"Create your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            passwordConfirm: '',\n            pronouns: ''\n          },\n          validate: values => {\n            const errors = {};\n\n            if (!values.firstName) {\n              errors.firstName = 'Required';\n            }\n\n            if (!values.lastName) {\n              errors.lastName = 'Required';\n            }\n\n            if (!values.email) {\n              errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n              errors.email = 'Invalid email address';\n            }\n\n            if (!values.password) {\n              errors.password = 'Required';\n            } else if (!/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i.test(values.password)) {\n              errors.password = 'Password must have a minimum of eight characters, at least one letter, one number and one special character (*, !, &, etc)';\n            }\n\n            if (!values.passwordConfirm) {\n              errors.passwordConfirm = 'You must confirm your password';\n            } else if (values.passwordConfirm !== values.password) {\n              errors.passwordConfirm = 'Your passwords do not match';\n            }\n\n            if (!values.pronouns) {\n              errors.pronouns = 'Required';\n            }\n\n            return errors;\n          },\n          onSubmit: (values, {\n            setSubmitting\n          }) => {\n            setUserData(values);\n            setTimeout(() => {\n              setSubmitting(false);\n            }, 500);\n          },\n          children: ({\n            submitForm,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            className: classes.form,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"firstName\",\n                type: \"text\",\n                label: \"First name\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"lastName\",\n                type: \"text\",\n                label: \"Last name\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"email\",\n                type: \"email\",\n                label: \"Email\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                type: \"password\",\n                label: \"Password\",\n                name: \"password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"passwordConfirm\",\n                type: \"password\",\n                label: \"Confirm Password\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Field, {\n                className: classes.input,\n                component: TextField,\n                name: \"pronouns\",\n                type: \"text\",\n                label: \"Pronouns\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              margin: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.button,\n                size: \"large\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: isSubmitting,\n                onClick: submitForm,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupDialog, \"JxN3cYGD251ubatX/wyWdZP/VWg=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignupDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupDialog\");","map":{"version":3,"sources":["/Users/skylarsoehl/Documents/NEU/2021 SPRING/HCI/FUBU/src/pages/home/signup-modal.js"],"names":["React","Button","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","withStyles","makeStyles","ThemeProvider","theme","TextField","Formik","Form","Field","Box","Redirect","useStyles","button","width","paddingTop","spacing","paddingBottom","marginTop","marginBottom","fontSize","borderRadius","boxShadow","input","form","display","flexDirection","justifyContent","alignItems","styles","root","margin","padding","title","fontWeight","textAlign","body","closeButton","position","right","top","color","DialogTitle","props","children","classes","onClose","other","DialogContent","SignupDialog","open","setOpen","useState","userData","setUserData","handleClickOpen","handleClose","firstName","lastName","email","password","passwordConfirm","pronouns","values","errors","test","setSubmitting","setTimeout","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from '../../theme';\nimport {TextField} from 'formik-material-ui';\nimport {Formik, Form, Field} from 'formik';\nimport Box from '@material-ui/core/Box';\n\nimport { Redirect } from 'react-router';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        width: '246px',\n        paddingTop: theme.spacing(0),\n        paddingBottom: theme.spacing(0),\n        marginTop: '15px',\n        marginBottom: '25px',\n        fontSize: '24px',\n        borderRadius: '8px',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n    },\n    input: {\n        marginBottom: '22px',\n        width: '500px',\n    },\n    form: {\n        width: \"552px\",\n        display: 'flex',\n        flexDirection: \"column\",\n        justifyContent: 'center',\n        alignItems: \"center\",\n    }\n}));\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(5),\n    },\n    title: {\n        fontWeight: 600,\n        textAlign: 'center',\n        paddingTop: '50px',\n    },\n    body: {\n        fontSize: '16px',\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: '#251F1C',\n    },\n});\n\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.title} {...other}>\n            <Typography variant=\"h1\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon fontSize=\"large\" />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        padding: '30px',\n    }\n}))(MuiDialogContent);\n\nexport default function SignupDialog() {\n    const [open, setOpen] = React.useState(false);\n    const [userData, setUserData] = React.useState({});\n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n\n        <ThemeProvider theme={theme}>\n            <Button className={classes.button} size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>Sign Up</Button>\n            <Dialog justifyContent=\"center\" onClose={handleClose} open={open}>\n                <DialogTitle onClose={handleClose}>\n                    Create your account\n                 </DialogTitle>\n                <DialogContent>\n                <Formik\n                        initialValues={{\n                            firstName: '',\n                            lastName: '',\n                            email: '',\n                            password: '',\n                            passwordConfirm: '',\n                            pronouns: '',\n                          }}\n                          validate={(values) => {\n                            const errors = {};\n\n                            if(!values.firstName) {\n                                errors.firstName = 'Required';\n                            } \n                            \n                            if(!values.lastName) {\n                                errors.lastName = 'Required';\n                            }                           \n\n                            if (!values.email) {\n                              errors.email = 'Required';\n                            } else if (\n                              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n                            ) {\n                              errors.email = 'Invalid email address';\n                            } \n\n                            if(!values.password) {\n                                errors.password = 'Required';\n                            } else if (\n                                !/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/i.test(values.password)\n                            ) {\n                                errors.password = 'Password must have a minimum of eight characters, at least one letter, one number and one special character (*, !, &, etc)'\n                            }\n\n                            if(!values.passwordConfirm) {\n                                errors.passwordConfirm = 'You must confirm your password'\n                            } else if (values.passwordConfirm !== values.password) {\n                                errors.passwordConfirm = 'Your passwords do not match'\n                            }\n\n                            if(!values.pronouns) {\n                                errors.pronouns = 'Required';\n                            } \n\n                            return errors;\n                          }}\n                          onSubmit={(values, {setSubmitting}) => {\n                              setUserData(values)\n                            setTimeout(() => {\n                              setSubmitting(false);\n                              \n                            }, 500);\n                          }}\n                    >\n                        {({submitForm, isSubmitting}) => (\n                            <Form className={classes.form}>\n                                 <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"firstName\"\n                                    type=\"text\"\n                                    label=\"First name\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"lastName\"\n                                    type=\"text\"\n                                    label=\"Last name\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                 <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"email\"\n                                    type=\"email\"\n                                    label=\"Email\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    variant=\"outlined\" \n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"passwordConfirm\"\n                                    type=\"password\"\n                                    label=\"Confirm Password\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Field\n                                    className={classes.input}\n                                    component={TextField}\n                                    name=\"pronouns\"\n                                    type=\"text\"\n                                    label=\"Pronouns\"\n                                    variant=\"outlined\"\n                                    />\n                                </Box>\n                                <Box margin={1}>\n                                    <Button\n                                    className={classes.button}\n                                    size=\"large\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={isSubmitting}\n                                    onClick={submitForm}\n                                    >\n                                        Next\n                                    </Button>\n                                </Box>\n                            </Form>\n                        )}\n                    </Formik>\n                </DialogContent>\n            </Dialog>\n        </ThemeProvider>\n    );\n}"]},"metadata":{},"sourceType":"module"}