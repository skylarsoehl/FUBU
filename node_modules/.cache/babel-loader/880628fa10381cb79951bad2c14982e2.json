{"ast":null,"code":"var _jsxFileName = \"/Users/rjohnson/dev/github.com/FUBU/src/pages/dashboard/dashboard-organizer.js\",\n    _s = $RefreshSig$();\n\nimport Sidebar from \"../../core/components/core-sidebar\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { ReactComponent as FUBULogoSmall } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/fubu_logo_small.svg\";\nimport Grid from '@material-ui/core/Grid';\nimport theme from '../../theme';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Emoji from '../../core/components/core-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  logout: {\n    backgroundColor: theme.palette.error.main,\n    width: '148px',\n    height: '46px',\n    color: \"#fff\",\n    fontSize: '24px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  logoutRow: {\n    marginTop: '32px',\n    marginRight: '50px',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: '%50'\n  },\n  text: {\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    fontSize: '50px',\n    fontWeight: 700\n  }\n}));\n\nfunction DashOrg() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        xs: 10,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.logoutRow,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.logout,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"error\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.text,\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.text,\n            children: \"  Good afternoon, (user name here!)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.text,\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.checkins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h1\",\n              children: \" Good afternoon, (user first name here)!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this)\n  /*                 \n                  <Grid container xs={3}>\n                      <Grid item xs={3}>\n                  </Grid>\n                  <Grid container xs={9}\n                      <Sidebar></Sidebar>\n                  </Grid>\n                  <Grid item xs={9}></Grid>\n                  <Grid item xs={12}>\n                      <Grid className={classes.text} item xs={12}>\n                          <Typography variant=\"h1\"> Good afternoon, (user first name here)!</Typography>\n                      </Grid>\n                      <Grid className={classes.text} item xs={12}>\n                          <Button className={classes.miniButtons} variant=\"contained\" color=\"secondary\">Back</Button>\n                          <Button className={classes.miniButtons} variant=\"contained\" disabled={\"disabled\"} color=\"primary\">Next</Button>\n                      </Grid>\n                      <Button className={classes.logout} variant=\"contained\" size=\"large\" color=\"error\">Logout</Button>\n                  </Grid>\n              </Grid>\n              </Grid>\n          </ThemeProvider > */\n  ;\n}\n\n_s(DashOrg, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DashOrg;\nexport default DashOrg;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashOrg\");","map":{"version":3,"sources":["/Users/rjohnson/dev/github.com/FUBU/src/pages/dashboard/dashboard-organizer.js"],"names":["Sidebar","React","makeStyles","ThemeProvider","Grid","theme","Typography","Button","Emoji","useStyles","root","display","logout","backgroundColor","palette","error","main","width","height","color","fontSize","boxShadow","dark","logoutRow","marginTop","marginRight","justifyContent","text","textAlign","fontWeight","DashOrg","classes","checkins"],"mappings":"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","sourcesContent":["import Sidebar from \"../../core/components/core-sidebar\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { ReactComponent as FUBULogoSmall } from '../../assets/fubu_logo_small.svg'\nimport Grid from '@material-ui/core/Grid';\nimport theme from '../../theme';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Emoji from '../../core/components/core-emoji';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n\n    },\n    logout: {\n        backgroundColor: theme.palette.error.main,\n        width: '148px',\n        height: '46px',\n        color: \"#fff\",\n        fontSize: '24px',\n        boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.25)',\n        '&:hover': {\n            backgroundColor: theme.palette.error.dark,\n        },\n    },\n    logoutRow: {\n        marginTop: '32px',\n        marginRight: '50px',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        height: '%50',\n\n    },\n    text: {\n        display: 'flex',\n        textAlign: 'center',\n        justifyContent: 'center',\n        fontSize: '50px',\n        fontWeight: 700,\n    }\n}));\n\n\n\nfunction DashOrg() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container xs={12} className={classes.root}>\n                <Grid container xs={2}>\n                    <Sidebar></Sidebar>\n                </Grid>\n                <Grid container xs={10}>\n                    <Grid item xs={12} className={classes.logoutRow}>\n                        <Button className={classes.logout} variant=\"contained\" size=\"large\" color=\"error\">Logout</Button>\n                    </Grid>\n                    <Grid className={classes.text} item xs={12}>\n                    <Typography className={classes.text}>  Good afternoon, (user name here!)</Typography>\n                    </Grid>\n                    <Grid className={classes.text} item xs={12}>\n                        <Grid item xs={6}>\n                            <Grid item className={classes.checkins}>\n                                \n                            </Grid>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h1\"> Good afternoon, (user first name here)!</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n\n            </Grid>\n        </ThemeProvider >\n\n        /*                 \n                        <Grid container xs={3}>\n                            <Grid item xs={3}>\n                        </Grid>\n                        <Grid container xs={9}\n                            <Sidebar></Sidebar>\n                        </Grid>\n                        <Grid item xs={9}></Grid>\n                        <Grid item xs={12}>\n                            <Grid className={classes.text} item xs={12}>\n                                <Typography variant=\"h1\"> Good afternoon, (user first name here)!</Typography>\n                            </Grid>\n                            <Grid className={classes.text} item xs={12}>\n                                <Button className={classes.miniButtons} variant=\"contained\" color=\"secondary\">Back</Button>\n                                <Button className={classes.miniButtons} variant=\"contained\" disabled={\"disabled\"} color=\"primary\">Next</Button>\n                            </Grid>\n                            <Button className={classes.logout} variant=\"contained\" size=\"large\" color=\"error\">Logout</Button>\n                        </Grid>\n                    </Grid>\n                    </Grid>\n                </ThemeProvider > */\n\n    );\n}\n\nexport default DashOrg;"]},"metadata":{},"sourceType":"module"}