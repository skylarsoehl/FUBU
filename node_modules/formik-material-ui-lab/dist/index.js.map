{"version":3,"file":"index.js","sources":["../src/Autocomplete.tsx","../src/ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiAutocomplete, {\n  AutocompleteProps as MuiAutocompleteProps,\n} from '@material-ui/lab/Autocomplete';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport { AutocompleteRenderInputParams } from '@material-ui/lab/Autocomplete';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>\n  extends FieldProps,\n    Omit<\n      MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n      'name' | 'value' | 'defaultValue'\n    > {\n  type?: string;\n}\n\nexport function fieldToAutocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>({\n  disabled,\n  field,\n  form: { isSubmitting, setFieldValue },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}: AutocompleteProps<\n  T,\n  Multiple,\n  DisableClearable,\n  FreeSolo\n>): MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.multiple) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n\n  return {\n    freeSolo,\n    onBlur:\n      onBlur ??\n      function (event) {\n        field.onBlur(event ?? field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, value) {\n        setFieldValue(field.name, value);\n      },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props,\n  };\n}\n\nexport function Autocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  return <MuiAutocomplete {...fieldToAutocomplete(props)} />;\n}\n\nAutocomplete.displayName = 'FormikMaterialUIAutocomplete';\n","import * as React from 'react';\nimport MuiToggleButtonGroup, {\n  ToggleButtonGroupProps as MuiToggleButtonGroupProps,\n} from '@material-ui/lab/ToggleButtonGroup';\n// import ToggleButton from '@material-ui/lab/ToggleButton';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface ToggleButtonGroupProps\n  extends FieldProps,\n    Omit<MuiToggleButtonGroupProps, 'name' | 'value' | 'error'> {\n  type?: string;\n}\n\nexport function fieldToToggleButtonGroup({\n  field: { onChange: _onChange, onBlur: fieldOnBlur, ...field },\n  type,\n  onChange,\n  onBlur,\n  form,\n  ...props\n}: ToggleButtonGroupProps): MuiToggleButtonGroupProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n\n    if (!props.exclusive) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  return {\n    onBlur:\n      onBlur ??\n      function () {\n        fieldOnBlur(field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, newValue) {\n        form.setFieldValue(field.name, newValue);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function ToggleButtonGroup(props: ToggleButtonGroupProps) {\n  return <MuiToggleButtonGroup {...fieldToToggleButtonGroup(props)} />;\n}\n\nToggleButtonGroup.displayName = 'FormikMaterialUIToggleButtonGroup';\n"],"names":["React.createElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAuBgB,mBAAmB,CAKjC,EAcD;IAbC,IAAA,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,YAAqC,EAA7B,YAAY,kBAAA,EAAE,aAAa,mBAAA,EACnC,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,QAAQ,cAAA,EACL,KAAK,cARR,uEASD,CADS;IAOR,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,SAAS,CACP,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAC1B,eAAa,KAAK,CAAC,IAAI,2DAAwD,CAChF,CAAC;SACH;KACF;IAGC,IAAU,SAAS,GAIjB,KAAK,SAJY,EACX,OAAO,GAGb,KAAK,OAHQ,EACL,SAAS,GAEjB,KAAK,SAFY,EAChB,iBAAiB,UAClB,KAAK,EALH,kCAKL,CADqB,CACZ;IAEV,2BACE,QAAQ,UAAA,EACR,MAAM,EACJ,MAAM,aAAN,MAAM,cAAN,MAAM,GACN,UAAU,KAAK;YACb,KAAK,CAAC,MAAM,CAAC,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,KAAK,CAAC,IAAI,CAAC,CAAC;SACnC,EACH,QAAQ,EACN,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GACR,UAAU,MAAM,EAAE,KAAK;YACrB,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAClC,EACH,QAAQ,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,YAAY,EAClC,OAAO,EAAE,YAAY,IAClB,iBAAiB,GACjB,KAAK,EACR;CACH;AAED,SAAgB,YAAY,CAK1B,KAAiE;IACjE,OAAOA,oBAAC,eAAe,eAAK,mBAAmB,CAAC,KAAK,CAAC,EAAI,CAAC;CAC5D;AAED,YAAY,CAAC,WAAW,GAAG,8BAA8B,CAAC;;SCzE1C,wBAAwB,CAAC,EAOhB;QANvB,aAA6D,EAA1C,SAAS,cAAA,EAAU,WAAW,YAAA,EAAK,KAAK,cAApD,sBAAsD,CAAF,EAC3D,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,IAAI,UAAA,EACD,KAAK,cAN+B,+CAOxC,CADS;IAER,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,SAAS,CACP,IAAI,KAAK,UAAU,EACnB,kDAAgD,KAAK,CAAC,IAAI,2CAAwC,CACnG,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACpB,SAAS,CACP,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAC1B,eAAa,KAAK,CAAC,IAAI,2DAAwD,CAChF,CAAC;SACH;KACF;IAED,2BACE,MAAM,EACJ,MAAM,aAAN,MAAM,cAAN,MAAM,GACN;YACE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB,EACH,QAAQ,EACN,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GACR,UAAU,MAAM,EAAE,QAAQ;YACxB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAC1C,IACA,KAAK,GACL,KAAK,EACR;CACH;AAED,SAAgB,iBAAiB,CAAC,KAA6B;IAC7D,OAAOA,oBAAC,oBAAoB,eAAK,wBAAwB,CAAC,KAAK,CAAC,EAAI,CAAC;CACtE;AAED,iBAAiB,CAAC,WAAW,GAAG,mCAAmC,CAAC;;;;;;;"}